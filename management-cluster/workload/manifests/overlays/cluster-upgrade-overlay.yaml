#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:data", "data")

#@overlay/match by=overlay.subset({"kind":"AWSMachineTemplate"}),expects="0+"
---
metadata:
  #@overlay/match missing_ok=True
  annotations:
    kapp.k14s.io/delete-strategy: "orphan"
    kapp.k14s.io/versioned: ""
    kapp.k14s.io/num-versions: "10"
spec:
  template:
    spec:
      #@overlay/match missing_ok=True
      ami:
        #@overlay/match missing_ok=True
        id: #@ data.values.aws.ami.id

#@overlay/match by=overlay.subset({"kind":"AWSCluster"}),expects="0+"
---
metadata:
  #@overlay/match missing_ok=True
  annotations:
    #@overlay/match missing_ok=True
    kapp.k14s.io/delete-strategy: "orphan"

#@overlay/match by=overlay.subset({"kind":"KubeadmControlPlane"}),expects="0+"
---
metadata:
  #@overlay/match missing_ok=True
  annotations:
    kapp.k14s.io/delete-strategy: "orphan"
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      dns:
        imageRepository: #@ data.values.kubeadmConfigSpec.dns.imageRepository
        imageTag: #@ data.values.kubeadmConfigSpec.dns.imageTag
        type: #@ data.values.kubeadmConfigSpec.dns.type
      etcd:
        local:
          imageRepository: #@ data.values.kubeadmConfigSpec.etcd.local.imageRepository
          imageTag: #@ data.values.kubeadmConfigSpec.etcd.local.imageTag
      imageRepository: #@ data.values.kubeadmConfigSpec.imageRepository
  #@overlay/match missing_ok=True
  version: #@ data.values.kubeadmConfigSpec.kubernetesVersion

#@overlay/match by=overlay.subset({"kind":"MachineDeployment"}),expects="0+"
---
spec:
  template:
    spec:
      #@overlay/match missing_ok=True
      version: #@ data.values.kubeadmConfigSpec.kubernetesVersion

#@overlay/match by=overlay.subset({"kind":"KubeadmConfigTemplate"}),expects="0+"
---
metadata:
  #@overlay/match missing_ok=True
  annotations:
    kapp.k14s.io/delete-strategy: "orphan"
    kapp.k14s.io/versioned: ""
    kapp.k14s.io/num-versions: "10"
